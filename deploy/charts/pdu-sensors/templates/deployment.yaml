apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "pdu-sensors.fullname" . }}
  labels:
    {{- include "pdu-sensors.labels" . | nindent 4 }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "pdu-sensors.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "pdu-sensors.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "pdu-sensors.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: exporter
          args:
            - --address
            - "{{ .Values.pduAddress }}"
            - --interval
            - "{{ .Values.pduScrapeInterval }}"
            - --metrics
            - --port
            - "{{ .Values.metricsPort }}"
          envFrom:
            - secretRef:
                name: {{ include "pdu-sensors.fullname" . }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: metrics
              containerPort: {{ .Values.metricsPort }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: metrics
          readinessProbe:
            httpGet:
              path: /
              port: metrics
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
        {{- with (ternary .Values.telegrafSidecar nil .Values.telegrafSidecar.enabled) }}
        - name: telegraf
          image: "{{ .image.repository }}:{{ .image.tag | default $.Chart.AppVersion }}"
          imagePullPolicy: {{ .image.pullPolicy }}
          livenessProbe:
            httpGet:
              path: /
              port: {{ .healthPort }}
          readinessProbe:
            httpGet:
              path: /
              port: {{ .healthPort }}
          securityContext:
            {{- toYaml .securityContext | nindent 12 }}
          resources:
            {{- toYaml .resources | nindent 12 }}
          volumeMounts:
            - name: telegraf
              mountPath: /etc/telegraf
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        {{- if .Values.telegrafSidecar.enabled }}
        - name: telegraf
          configMap:
            name: {{ include "pdu-sensors.fullname" . }}
            items:
            - key: telegraf.conf
              path: telegraf.conf
        {{- end }}
